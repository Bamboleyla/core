# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CompaniesEntity {
  apartment: String
  author: UserEntity!
  city: String
  country: String!
  createdAt: DateTime!
  district: String
  house: String
  id: ID!
  index: String
  inn: String
  name: String!
  region: String
  settlement: String
  staff: StaffMembers!
  street: String
  type: String!
  updatedAt: DateTime!
}

input CreateCompanyInput {
  apartment: String
  city: String
  country: String!
  district: String
  house: String
  index: String
  inn: String
  name: String!
  region: String
  settlement: String
  street: String
  type: String!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type GraphQLServiceGroup {
  children: [GraphQLServiceGroup!]
  key: Float!
  name: String!
}

input LogInInput {
  email: String!
  password: String!
}

type LogInResponse {
  access_token: String!
}

type Mutation {
  AUTH_createUser(createUser: CreateUserInput!): LogInResponse!
  COMPANY_create(data: CreateCompanyInput!): Float!
  COMPANY_removeAll: Boolean!
  USER_remove(id: Float!): Float!
}

type Query {
  AUTH_logIn(LogInInput: LogInInput!): LogInResponse!
  AUTH_token: Boolean!
  COMPANY_getAll: [CompaniesEntity!]!
  SUPPORT_getAllCompanies: [CompaniesEntity!]!
  USERS_getAll: [UserEntity!]!
  USER_get(id: ID!): UserEntity!
}

type StaffMembers {
  accountant: [UserEntity!]!
  administrators: [UserEntity!]!
  masters: [UserEntity!]!
  owner: [UserEntity!]!
}

type UserEntity {
  createdAt: DateTime!
  email: String!
  id: ID!
  name: String!
  password: String!
  updatedAt: DateTime!
}